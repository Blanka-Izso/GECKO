function runDLKcat(DLKcatInput, DLKcatOutput, modelAdapter, DLKcatPath)
% runDLKcat
%   Runs DLKcat to predict kcat values.
%
% Input
%   DLKcatInput     path to the DLKcatInput file (including file name), as
%                   written by writeDLKcatInput. Optional, otherwise the
%                   file will be read from the model-specific 'data' sub-
%                   folder taken from modelAdapter (e.g.
%                   GECKO/userData/ecYeastGEM/data/DLKcatInput.tsv)
%   DLKcatOutput    path to the DLKcatOutput file (including file name), as
%                   will be generated by DLKcat and should be read by
%                   readDLKcatOutput. Optional, otherwise the file will be
%                   stored in the model-specific 'data' sub-folder taken
%                   from modelAdapter (e.g.
%                   GECKO/userData/ecYeastGEM/data/DLKcatOutput.tsv)
%   modelAdapter    a loaded model adapter. (Optional, will otherwise use
%                   the default model adapter)
%   DLKcatPath      path where DLKcat is/will be installed. (Optional,
%                   defaults to GECKO/dlkcat)
%
%   NOTE: Requires Python 3 and pip to be installed. On Windows, also
%         Windows Subsystem for Linux (WSL) is required.

%Get the GECKO path
geckoPath=findGECKOroot();

if nargin < 4
    DLKcatPath = fullfile(geckoPath,'dlkcat');
end

if nargin < 3 || isempty(modelAdapter)
    modelAdapter = ModelAdapterManager.getDefaultAdapter();
    if isempty(modelAdapter)
        error('Either send in a modelAdapter or set the default model adapter in the ModelAdapterManager.')
    end
end
params = modelAdapter.params;

if nargin < 2 || isempty(DLKcatOutput)
    DLKcatOutput = fullfile(params.path,'data','DLKcatOutput.tsv');
end
if nargin < 1 || isempty(DLKcatInput)
    DLKcatInput = fullfile(params.path,'data','DLKcatInput.tsv');
end

if ~exist(fullfile(DLKcatPath,'DLKcat.py'),'file')
    if ~exist(fullfile(DLKcatPath),'dir')
        mkdir(fullfile(DLKcatPath));
    end
    disp('=== Downloading DLKcat...')
    %OneDrive URL below is temporary and expires 18 Feb. To be replaced
    %with URL to GitHub once GECKO3 is released.
    packageURL = 'https://chalmers-my.sharepoint.com/:u:/g/personal/eduardk_chalmers_se/ESrmFfgjTCVNgihPOIgEPg0BfTuOPuj4Deav-jWWG-Royg?e=iAIUta&download=1';
    %packageURL = 'https://github.com/SysBioChalmers/GECKO/releases/download/v3.0.0/dlkcat_package.zip';
    websave(fullfile(DLKcatPath,'dlkcat_package.zip'),packageURL);
    unzip(fullfile(DLKcatPath,'dlkcat_package.zip'),DLKcatPath);
    delete(fullfile(DLKcatPath,'dlkcat_package.zip'));
end

if ispc
    [~,pythonCheck] = system('wsl python3 --version');
    if ~startsWith(pythonCheck,'Python 3.')
        error('python 3 is not available via WSL')
    end
    WSLpath.DLKcat = getWSLpath(DLKcatPath);
    WSLpath.Input  = getWSLpath(DLKcatInput);
    WSLpath.Output = getWSLpath(DLKcatOutput);
    WSLcommand = ['wsl --shell-type login --cd ' WSLpath.DLKcat '/'];
    fprintf(['=== Below, status messages from WSL are shown.\n'...
             '=== Warnings about bogus screen size can safely be ignored.\n'...
             '=== Preparing DLKcat environment...\n\n'])    
    system([WSLcommand ' pipenv install -r requirements.txt'],'-echo');
    fprintf('\n=== Running DLKcat prediction, this may take several minutes...\n\n')    
    system([WSLcommand ' pipenv run python3 DLKcat.py ' WSLpath.Input ' ' WSLpath.Output],'-echo');
else
    [~,pythonCheck] = system('python3 --version');
    if ~startsWith(pythonCheck,'Python 3.')
        error('python 3 is not available')
    end
    currentPath = pwd();
    cd(DLKcatPath);
    fprintf('=== Preparing DLKcat environment...\n\n')    
    system('pipenv install -r requirements.txt','-echo');
    fprintf('\n=== Running DLKcat prediction, this may take several minutes...\n\n')    
    system(['pipenv run python3 DLKcat.py ' DLKcatInput ' ' DLKcatOutput],'-echo');
    cd(currentPath);
end
end
