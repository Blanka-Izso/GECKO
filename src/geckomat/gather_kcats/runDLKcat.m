function runDLKcat(DLKcatInput, DLKcatOutput, modelAdapter, DLKcatPath)
% runDLKcat
%   Runs DLKcat to predict kcat values.
%
% Input
%   DLKcatInput     path to the DLKcatInput file (including file name),
%                   as written by writeDLKcatInput. If empty, ModelAdapter
%                   will be asked for the model-specific 'data' folder
%   DLKcatOutput    path to the DLKcatOutput file (including file name), as
%                   will be generated by DLKcat and should be read by
%                   readDLKcatOutput.  If empty, ModelAdapter will be asked
%                   for the model-specific 'data' folder
%   modelAdapter    a loaded model adapter (Optional, will otherwise use the
%                   default model adapter)
%   DLKcatPath      path where DLKcat is/will be installed. (Optional,
%                   defaults to GECKO/dlkcat)
%
%   NOTE: Requires Python and on Windows: WSL.

%Get the GECKO path
geckoPath=findGECKOroot();

if nargin < 4
    DLKcatPath = fullfile(geckoPath,'dlkcat');
end

if nargin < 3 || isempty(modelAdapter)
    modelAdapter = ModelAdapterManager.getDefaultAdapter();
    if isempty(modelAdapter)
        error('Either send in a modelAdapter or set the default model adapter in the ModelAdapterManager.')
    end
end
params = modelAdapter.params;

if nargin < 2 || isempty(DLKcatOutput)
    DLKcatOutput = fullfile(params.path,'data','DLKcatOutput.tsv');
end
if nargin < 1 || isempty(DLKcatInput)
    DLKcatInput = fullfile(params.path,'data','DLKcatInput.tsv');
end

if ~exist(fullfile(DLKcatPath,'DLKcat.py'))
    %URL below not yet function, but this is how it will be implemented
    packageURL = 'https://github.com/SysBioChalmers/GECKO/releases/download/v3.0.0/dlkcat_package.zip';
    websave(fullfile(DLKcatPath,'dlkcat_package.zip'),packageURL);
    unzip(fullfile(DLKcatPath,'dlkcat_package.zip'));
end

if ispc
    [~,pythonCheck] = system('wsl python --version');
    if ~startsWith(pythonCheck,'Python 3.')
        error('python 3 is not available via WSL')
    end
    WSLpath.DLKcat = getWSLpath(DLKcatPath);
    WSLpath.Input  = getWSLpath(DLKcatInput);
    WSLpath.Output = getWSLpath(DLKcatOutput);
    WSLcommand = ['wsl --shell-type login --cd ' WSLpath.DLKcat ];
    fprintf(['Below, status messages from WSL are shown. Repeated warnings '...
             'about bogus screen size can be ignored\n\n'])
    system([WSLcommand ' pipenv install -r requirements.txt'],'-echo');
    system([WSLcommand ' pipenv run python DLKcat.py ' WSLpath.Input ' ' WSLpath.Output],'-echo');
else
    [~,pythonCheck] = system('python --version');
    if ~startsWith(pythonCheck,'Python 3.')
        error('python 3 is not available')
    end
    currentPath = pwd();
    cd(DLKcatPath);
    system('pipenv install -r requirements.txt','-echo');
    system(['pipenv run python DLKcat.py ' DLKcatInput ' ' DLKcatOutput],'-echo');
end
end
