function runDLKcat(DLKcatInput, DLKcatOutput, modelAdapter, DLKcatPath)
% runDLKcat
%   Runs DLKcat to predict kcat values.
%
% Input
%   DLKcatInput     path to the DLKcatInput file (including file name), as
%                   written by writeDLKcatInput. Optional, otherwise the
%                   file will be read from the model-specific 'data' sub-
%                   folder taken from modelAdapter (e.g.
%                   GECKO/userData/ecYeastGEM/data/DLKcatInput.tsv)
%   DLKcatOutput    path to the DLKcatOutput file (including file name), as
%                   will be generated by DLKcat and should be read by
%                   readDLKcatOutput. Optional, otherwise the file will be
%                   stored in the model-specific 'data' sub-folder taken
%                   from modelAdapter (e.g.
%                   GECKO/userData/ecYeastGEM/data/DLKcatOutput.tsv)
%   modelAdapter    a loaded model adapter. (Optional, will otherwise use
%                   the default model adapter)
%   DLKcatPath      path where DLKcat is/will be installed. (Optional,
%                   defaults to GECKO/dlkcat)
%
%   NOTE: Requires Python 3 to be installed. If not present, it will also
%   install pip, pipenv and other DLKcat dependencies.

%Get the GECKO path
geckoPath=findGECKOroot();

if nargin < 4
    DLKcatPath = fullfile(geckoPath,'dlkcat');
end

if nargin < 3 || isempty(modelAdapter)
    modelAdapter = ModelAdapterManager.getDefaultAdapter();
    if isempty(modelAdapter)
        error('Either send in a modelAdapter or set the default model adapter in the ModelAdapterManager.')
    end
end
params = modelAdapter.params;

if nargin < 2 || isempty(DLKcatOutput)
    DLKcatOutput = fullfile(params.path,'data','DLKcatOutput.tsv');
end
if nargin < 1 || isempty(DLKcatInput)
    DLKcatInput = fullfile(params.path,'data','DLKcatInput.tsv');
end

if ~exist(fullfile(DLKcatPath,'DLKcat.py'),'file')
    if ~exist(fullfile(DLKcatPath),'dir')
        mkdir(fullfile(DLKcatPath));
    end
    disp('=== Downloading DLKcat...')
    %OneDrive URL below is temporary and expires 18 Feb. To be replaced
    %with URL to GitHub once GECKO3 is released.
    packageURL = 'https://chalmers-my.sharepoint.com/:u:/g/personal/eduardk_chalmers_se/ESrmFfgjTCVNgihPOIgEPg0BfTuOPuj4Deav-jWWG-Royg?e=iAIUta&download=1';
    %packageURL = 'https://github.com/SysBioChalmers/GECKO/releases/download/v3.0.0/dlkcat_package.zip';
    websave(fullfile(DLKcatPath,'dlkcat_package.zip'),packageURL);
    unzip(fullfile(DLKcatPath,'dlkcat_package.zip'),DLKcatPath);
    delete(fullfile(DLKcatPath,'dlkcat_package.zip'));
end

%% Check and install requirements
% On Mac, python might not be properly loaded if MATLAB is started via
% launcher and not terminal. This is a dirty solution if runDLKcat is run
% multiple times in one MATLAB instance, as it always appends the path, but
% its fine.
if ismac
    try
        [~, zPath] = system("awk '/PATH=/{print}' ~/.zprofile");
        zPath = strip(strsplit(zPath,':'));
        zPath = zPath(contains(zPath,'Python.framework'));
        zPath = regexprep(zPath{1}, 'PATH="', '');
        setenv('PATH', strcat(zPath, ':', getenv("PATH")));
    catch
    end
end

% Python
three = ''; %suffix (python vs. python3)
[checks.python.status, checks.python.out] = system('python --version');
if checks.python.status ~= 0 || ~startsWith(checks.python.out,'Python 3.')
    [checks.python.status, checks.python.out] = system('python3 --version');
    if checks.python.status == 0
        three = '3';
        if ispc
            [~, pythPath] = system('where python3');
            pythPath = regexprep(pythPath,'\n.*','');
        else
            [~, pythPath] = system('which python3');
        end
    else
        error('Cannot find Python 3.')
    end
elseif startsWith(checks.python.out,'Python 3.')
    if ispc
        [~, pythPath] = system('where python');
        pythPath = regexprep(pythPath,'\n.*','');
    else
        [~, pythPath] = system('which python');
    end
end

% add the Python package dir if not in PATH.
if ispc
    [~,packageDir]=system(['python' three ' -m site --user-site']);
    packageDir=strip(regexprep(packageDir,'site-packages','Scripts'));
    setenv('PATH',strcat(getenv("PATH"), ';',  packageDir));
else
    [~,packageDir]=system(['python' three ' -m site --user-base']);
    setenv('PATH',strcat(getenv("PATH"), ':',  packageDir, '/bin/'));
end

% pip
[checks.pip.status, checks.pip.out] = system(['pip' three ' --version']);
if checks.pip.status ~= 0
    disp('=== Installing pip...')  
    status = system(['python' three ' -m ensurepip --upgrade']);
    if status == 0
        [checks.pip.status, checks.pip.out] = system(['pip' three ' --version']);
    end
    if status ~= 0 || checks.pip.status ~=0
        error('Cannot find pip and automated installation failed')
    end
end

% pipenv
[checks.pipenv.status, checks.pipenv.out] = system('pipenv --version');
if checks.pipenv.status ~= 0
    disp('=== Installing pipenv...')    
    status = system(['pip' three ' install pipenv']);
    if status == 0
        [checks.pipenv.status, checks.pipenv.out] = system('pipenv --version');
        if checks.pipenv.status ~= 0
            [checks.pipenv.status, checks.pipenv.out] = system('pipenv --version');
            if checks.pipenv.status ~= 0
                error('After installing pipenv, it cannot be found in the PATH')
            end
        end
    else
        error('Unable to install pipenv')
    end
end

currPath = pwd();
cd(DLKcatPath);

[checks.dlkcatenv.status, checks.dlkcatenv.out] = system('pipenv --py');
if checks.dlkcatenv.status ~= 0
    disp('=== Preparing DLKcat environment...')
    system(['pipenv install -r requirements.txt --python ' pythPath], '-echo');
end
disp('=== Running DLKcat prediction, this may take several minutes...')
system(['pipenv run python' three ' DLKcat.py ' DLKcatInput ' ' DLKcatOutput],'-echo');
cd(currPath);
end
